{"ast":null,"code":"var _jsxFileName = \"I:\\\\4. Annam.Ai\\\\Final Project\\\\quiz-generator\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [score, setScore] = useState(0);\n  const fetchQuiz = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/quiz');\n      setQuiz(res.data);\n    } catch (err) {\n      console.error(\"Error fetching quiz\", err);\n    }\n  };\n  const handleAnswer = async option => {\n    const q = quiz[current];\n    const response = {\n      questionId: q.id,\n      selectedOption: option,\n      timestamp: current * 25 // assuming 25%, 50%, 75%\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/response', response);\n      if (res.data.correct) {\n        setScore(score + 1);\n      }\n    } catch (err) {\n      console.error(\"Error submitting response\", err);\n    }\n\n    // move to next question\n    setCurrent(prev => prev + 1);\n  };\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n  if (quiz.length === 0) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 33\n  }, this);\n  if (current >= quiz.length) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"Quiz finished! Your score: \", score, \"/\", quiz.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 38\n  }, this);\n  const q = quiz[current];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", current + 1, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: q.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: q.options.map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(opt),\n        style: {\n          display: \"block\",\n          margin: \"10px 0\",\n          padding: \"10px\"\n        },\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Current Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qYhf2QMKMaKPrqjsozCvkfcWz8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","current","setCurrent","score","setScore","fetchQuiz","res","get","data","err","console","error","handleAnswer","option","q","response","questionId","id","selectedOption","timestamp","post","correct","prev","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","question","options","map","opt","onClick","display","margin","_c","$RefreshReg$"],"sources":["I:/4. Annam.Ai/Final Project/quiz-generator/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\ntype Question = {\n  id: string;\n  question: string;\n  options: string[];\n};\n\nconst App: React.FC = () => {\n  const [quiz, setQuiz] = useState<Question[]>([]);\n  const [current, setCurrent] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const fetchQuiz = async () => {\n    try {\n      const res = await axios.get<Question[]>('http://localhost:5000/api/quiz');\n      setQuiz(res.data);\n    } catch (err) {\n      console.error(\"Error fetching quiz\", err);\n    }\n  };\n\n  const handleAnswer = async (option: string) => {\n    const q = quiz[current];\n    const response = {\n      questionId: q.id,\n      selectedOption: option,\n      timestamp: current * 25 // assuming 25%, 50%, 75%\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/response', response);\n      if (res.data.correct) {\n        setScore(score + 1);\n      }\n    } catch (err) {\n      console.error(\"Error submitting response\", err);\n    }\n\n    // move to next question\n    setCurrent(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n\n  if (quiz.length === 0) return <h3>Loading quiz...</h3>;\n  if (current >= quiz.length) return <h2>Quiz finished! Your score: {score}/{quiz.length}</h2>;\n\n  const q = quiz[current];\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h2>Question {current + 1}:</h2>\n      <p>{q.question}</p>\n      <div>\n        {q.options.map((opt) => (\n          <button\n            key={opt}\n            onClick={() => handleAnswer(opt)}\n            style={{ display: \"block\", margin: \"10px 0\", padding: \"10px\" }}\n          >\n            {opt}\n          </button>\n        ))}\n      </div>\n      <h4>Current Score: {score}</h4>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}